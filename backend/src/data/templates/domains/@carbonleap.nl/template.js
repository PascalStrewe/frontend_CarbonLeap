// src/data/templates/domains/@carbonleap.nl/template.js

const { rgb } = require('pdf-lib');

module.exports = {
  generatePDF: async (pdfDoc, page, data) => {
    const { claim, intervention, domain, fonts } = data;
    const { width, height } = page.getSize();
    
    // Set margins
    const margins = {
      top: 50,
      right: 50,
      bottom: 50,
      left: 50
    };

    // Set colors from template
    const primaryColor = rgb(0.063, 0.239, 0.368); // #103D5E
    const secondaryColor = rgb(0.725, 0.875, 0.851); // #B9DFD9

    // Initial Y position
    let currentY = height - margins.top;

    // Draw header
    page.drawText('Carbon Reduction Claim Statement', {
      x: margins.left,
      y: currentY,
      size: 24,
      font: fonts.bold,
      color: primaryColor
    });

    currentY -= 40;

    // Draw company name
    page.drawText(domain.companyName, {
      x: margins.left,
      y: currentY,
      size: 16,
      font: fonts.bold,
      color: primaryColor
    });

    currentY -= 30;

    // Draw claim details
    const details = [
      { label: 'Claim ID:', value: claim.id },
      { label: 'Intervention ID:', value: intervention.interventionId },
      { label: 'Amount Claimed:', value: `${claim.amount.toFixed(2)} tCO2e` },
      { label: 'Vintage:', value: claim.vintage.toString() },
      { label: 'Valid Until:', value: new Date(claim.expiryDate).toLocaleDateString() },
      { label: 'Intervention Type:', value: intervention.modality },
      { label: 'Geography:', value: intervention.geography },
      { label: 'Certification:', value: intervention.certificationScheme || 'N/A' }
    ];

    for (const detail of details) {
      // Draw label
      page.drawText(detail.label, {
        x: margins.left,
        y: currentY,
        size: 12,
        font: fonts.bold,
        color: primaryColor
      });

      // Draw value
      page.drawText(detail.value, {
        x: margins.left + 150,
        y: currentY,
        size: 12,
        font: fonts.regular,
        color: rgb(0, 0, 0)
      });

      currentY -= 25;
    }

    // Add verification section
    currentY -= 20;
    page.drawText('Verification', {
      x: margins.left,
      y: currentY,
      size: 18,
      font: fonts.bold,
      color: primaryColor
    });

    currentY -= 30;

    // Add verification text
    const verificationText = 
      'This document certifies that the above carbon reduction claim ' +
      'has been verified and recorded on the CarbonLeap platform. ' +
      'The claim is based on actual emission reductions achieved ' +
      'through the specified intervention.';

    // Word wrap verification text
    const words = verificationText.split(' ');
    let line = '';
    const maxWidth = width - margins.left - margins.right;

    for (const word of words) {
      const testLine = line + word + ' ';
      const lineWidth = fonts.regular.widthOfTextAtSize(testLine, 12);
      
      if (lineWidth > maxWidth && line.length > 0) {
        page.drawText(line, {
          x: margins.left,
          y: currentY,
          size: 12,
          font: fonts.regular,
          color: rgb(0, 0, 0)
        });
        line = word + ' ';
        currentY -= 20;
      } else {
        line = testLine;
      }
    }
    
    if (line.length > 0) {
      page.drawText(line.trim(), {
        x: margins.left,
        y: currentY,
        size: 12,
        font: fonts.regular,
        color: rgb(0, 0, 0)
      });
    }

    // Add footer
    currentY = margins.bottom + 30;
    
    // Generation date
    page.drawText(`Generated on: ${new Date().toLocaleDateString()}`, {
      x: margins.left,
      y: currentY,
      size: 10,
      font: fonts.regular,
      color: rgb(0, 0, 0)
    });

    // Company reference
    page.drawText('Generated by CarbonLeap', {
      x: width - margins.right - 150,
      y: currentY,
      size: 10,
      font: fonts.regular,
      color: primaryColor
    });
  }
};